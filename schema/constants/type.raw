<h1>Types</h2>

<p>The Meshy Space base object <SCHEMA>b:unit</SCHEMA> is extremely
flexible, but not expressive.  The <i>Concept</i> builds a network, in
which units have a Role.  Roles refer to units with a certain content,
content of a certain Type.
See also the <a href="/schemas/base/constants/types.html">base types</a>.</p>

<p>For instance, the role of "owner" of something will refer to a unit of
type "identity".  In Meshy Space constants: a collection unit may have a
<SCHEMA>b:has</SCHEMA> element which <code>is</code> about the
<UNIT>msc:Role/Owner</UNIT> (Role).  It <code>ref</code>ers to a unit
of <code>unit.type</code> <UNIT>msc:Type/Identity</UNIT>.</p>

<p>At the moment, these are the types you can expect: (sorted
alphabetically)</p>

<div id="types" class="accordion constants">

<h3 name="Collection">msc:Type/Collection</h3>
<div>
  <p>Mainly contains products (units with data managed by other applications).
    It may contain information how to mirror the data and the meta-data.
    (Computer people call Collections "directories", "map", or "Drive")</p>
</div>

<h3 name="Company">msc:Type/Company</h3>
<div>
  <p>Groups all activities of a legal entity, like a company, foundation,
    or person.  It MAY publish public (anonymized) identities of personnel,
    and contact information.  Also, it will "open" Shops per main activity.
    Departments are Companies contained inside other Companies.</p>
</div>

<h3 name="Identity">msc:Type/Identity</h3>
<div>
  <p>This represents a public view of a person, company or organization.
    As a person, you may want to create many Identities, for various
    roles you have in society.  When an Identity contains other Identities,
    it behaves like a group.  Even system processes have identities, which
    allow them to sign their processing results.
    (Computer people call Identities usually "login" or "certificate").</p>
</div>

<h3 name="Scribe">msc:Type/Scribe</h3>
<div>
  <p>Configuration of Collection management process, as executed by the
    Town hall.  Each Scribe needs to run often, RECOMMENDED at least every
    hour.  But it is also used to retrieve units from remove Towns.  It
    implements the unit's life-cycle.  Scribes are automatically created
    when you go to a Town you have not visited before.  Then, they can
    be fine-tuned.
    (Computer people call Scribes "rsync scripts" or "wget")</p>
</div>

<h3 name="Shop">msc:Type/Shop</h3>
<div>
  <p>Groups Collections which relate to one activity of a Company:
  documentation, input data, output data, actions, history.  (Computer
  people call shops "network disk", "ftp server", or "shares")</p>
</div>

<h3 name="Town">msc:Type/Town</h3>
<div>
  <p>Main control unit for a Meshy Space instance.  It manages multiple
  namespaces which it has registered for companies and people.
  It implements the life-cycle of the units.  The Town contains Shops.
  (Computer people call Towns confusingly "servers")</p>
</div>

</div> <!-- end of accordion -->
